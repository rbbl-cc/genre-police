apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "genre-police.fullname" . }}
  labels:
    {{- include "genre-police.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.genre_police.replicaCount }}
  selector:
    matchLabels:
      {{- include "genre-police.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.genre_police.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "genre-police.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.genre_police.image.repository }}:{{ .Values.genre_police.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.genre_police.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: DISCORD_TOKEN
              value: {{ quote .Values.genre_police.settings.DISCORD_TOKEN }}
            - name: SPOTIFY_CLIENT_ID
              value: {{ quote .Values.genre_police.settings.SPOTIFY_CLIENT_ID }}
            - name: SPOTIFY_CLIENT_SECRET
              value: {{ quote .Values.genre_police.settings.SPOTIFY_CLIENT_SECRET }}
            - name: PORT
              value: "80"
            {{ if not .Values.postgresql.enabled }}
            - name: JDBC_URL
              value: {{ quote .Values.genre_police.settings.JDBC_URL }}
            - name: DB_USER
              value: {{ quote .Values.genre_police.settings.DB_USER }}
            - name: DB_PASSWORD
              value: {{ quote .Values.genre_police.settings.DB_PASSWORD }}
            {{ else }}
            - name: JDBC_URL
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:{{ default "5432" .Values.global.postgresql.service.ports.postgresql }}/{{ .Values.global.postgresql.auth.database }}
            - name: DB_USER
              value: {{ quote .Values.global.postgresql.auth.username }}
            - name: DB_PASSWORD
              value: {{ quote .Values.global.postgresql.auth.password }}
            {{ end }}
          startupProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 18
            httpGet:
              port: 80
              path: readyz
          readinessProbe:
            httpGet:
              port: 80
              path: readyz
          livenessProbe:
            httpGet:
              port: 80
              path: healthz
          resources:
            {{- toYaml .Values.genre_police.resources | nindent 12 }}
      {{- with .Values.genre_police.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.genre_police.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.genre_police.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
