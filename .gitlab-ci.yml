"stages":
- "build"
- "docker"
- "helm"
- "release"
"build":
  image:
    name: "gradle:7.2.0-jdk11"
  stage: "build"
  artifacts:
    paths:
    - "app/build/libs/genre-police.jar"
  script:
  - "gradle build"
".docker":
  image:
    name: "docker"
  stage: "docker"
  services:
  - name: "docker:dind"
  before_script:
  - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
"docker-build":
  extends:
  - ".docker"
  needs:
  - job: "build"
  script:
  - "docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA ./app"
  - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
"docker-publish-dev":
  extends:
  - ".docker"
  needs:
  - job: "docker-build"
  rules:
  - if: "$CI_COMMIT_BRANCH =~ /^dev$/"
  script:
  - "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  - "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA rbbl/genre-police:dev"
  - "docker login -u $DOCKERHUB_USER -p $DOCKERHUB_ACCESS_TOKEN"
  - "docker push rbbl/genre-police:dev"
"docker-publish-master":
  extends:
  - ".docker"
  needs:
  - job: "docker-build"
  rules:
  - if: "$CI_COMMIT_BRANCH =~ /^master$/"
  script:
  - "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  - "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA rbbl/genre-police:latest"
  - "docker login -u $DOCKERHUB_USER -p $DOCKERHUB_ACCESS_TOKEN"
  - "docker push rbbl/genre-police:latest"
"docker-publish-release":
  extends:
  - ".docker"
  needs:
  - job: "docker-build"
  rules:
  - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+$/"
  script:
  - "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  - "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA rbbl/genre-police:$CI_COMMIT_TAG"
  - "docker login -u $DOCKERHUB_USER -p $DOCKERHUB_ACCESS_TOKEN"
  - "docker push rbbl/genre-police:$CI_COMMIT_TAG"
"docker-publish-release-candidate":
  extends:
  - ".docker"
  needs:
  - job: "docker-build"
  rules:
  - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+-RC\\d+$/"
  script:
  - "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  - "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA rbbl/genre-police:$CI_COMMIT_TAG"
  - "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $JFROG_URL/genre-police-docker-local/genre-police:$CI_COMMIT_TAG"
  - "docker login -u $DOCKERHUB_USER -p $DOCKERHUB_ACCESS_TOKEN"
  - "docker login -u $JFROG_USERNAME -p $JFROG_API_KEY $JFROG_URL"
  - "docker push rbbl/genre-police:$CI_COMMIT_TAG"
  - "docker push $JFROG_URL/genre-police-docker-local/genre-police:$CI_COMMIT_TAG"
".helm":
  image:
    name: "fedora"
  stage: "helm"
  before_script:
  - "dnf in -y openssl"
  - "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3"
  - "chmod 700 get_helm.sh"
  - "./get_helm.sh"
  - "helm repo add bitnami https://charts.bitnami.com/bitnami"
  - "helm dependency build helm/genre-police"
  - "helm package helm/genre-police"
  - "mv genre-police-*.tgz genre-police.tgz"
"helm-publish-release":
  extends:
  - ".helm"
  rules:
  - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+$/"
  script:
  - "curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form 'chart=@genre-police.tgz'\
    \ ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"
"helm-publish-release-candidate":
  extends:
  - ".helm"
  rules:
  - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+-RC\\d+$/"
  script:
  - "curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form 'chart=@genre-police.tgz'\
    \ ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/dev/charts"
"create-release":
  image:
    name: "registry.gitlab.com/gitlab-org/release-cli:latest"
  stage: "release"
  rules:
  - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+$/"
  script:
  - "echo 'Running the release job.'"
  release:
    tag_name: "$CI_COMMIT_TAG"
    name: "$CI_COMMIT_TAG"
    description: "Release $CI_COMMIT_TAG"